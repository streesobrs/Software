# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# 自动化.NET Core桌面应用（WPF/Windows Forms）的构建、测试、签名和打包
# 解决方案文件：Software.sln（根目录）
# 打包项目：默认命名为Software.Package（可按需修改）

name: .NET Core Desktop (No Signing)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Solution_Name: Software.sln  # 根目录的解决方案
      Test_Project_Path: ""  # 测试项目路径（无则留空）
      Wap_Project_Directory: Software.Package  # 打包项目目录
      Wap_Project_Path: Software.Package\Software.Package.wapproj  # 打包项目路径

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.0.x

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      # 可选：运行单元测试（有测试项目才需要）
      - name: Run unit tests
        if: env.Test_Project_Path != ''
        run: dotnet test $env:Test_Project_Path --configuration ${{ matrix.configuration }}

      - name: Restore dependencies
        run: msbuild $env:Solution_Name /t:Restore /p:Configuration=${{ matrix.configuration }}

      - name: Build and package app (unsigned)
        run: |
          msbuild $env:Wap_Project_Path `
            /p:Configuration=${{ matrix.configuration }} `
            /p:UapAppxPackageBuildMode=SideLoadOnly `  # 旁加载模式（无需商店）
            /p:AppxBundle=Always `
            /p:AppxBundlePlatforms="x86|x64" `
            /p:PackageCertificateKeyFile=""  # 清空证书配置

      - name: Upload MSIX package (unsigned)
        uses: actions/upload-artifact@v4
        with:
          name: Unsigned-MSIX-${{ matrix.configuration }}
          path: ${{ env.Wap_Project_Directory }}\AppPackages
